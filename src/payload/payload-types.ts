/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    pages: Page;
    media: Media;
    categories: Category;
    users: User;
    menus: Menu;
    posts: Post;
    news: News;
    'alert-types': AlertType;
    alerts: Alert;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  publishedAt?: string | null;
  layout: (
    | {
        alerts: (number | Alert)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'alertCarousel';
      }
    | {
        introContent: {
          [k: string]: unknown;
        }[];
        populateBy?: ('collection' | 'selection') | null;
        relationTo?: ('posts' | 'news') | null;
        categories?: (number | Category)[] | null;
        limit?: number | null;
        selectedDocs?:
          | (
              | {
                  relationTo: 'posts';
                  value: number | Post;
                }
              | {
                  relationTo: 'news';
                  value: number | News;
                }
            )[]
          | null;
        populatedDocs?:
          | (
              | {
                  relationTo: 'posts';
                  value: number | Post;
                }
              | {
                  relationTo: 'news';
                  value: number | News;
                }
            )[]
          | null;
        populatedDocsTotal?: number | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'archive';
      }
    | {
        darkerBackground?: boolean | null;
        richText: {
          [k: string]: unknown;
        }[];
        links?:
          | {
              link?: {
                link_type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'pages';
                  value: number | Page;
                } | null;
                url?: string | null;
                label?: string | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        darkerBackground?: boolean | null;
        columns?:
          | {
              size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
              horizontalAlign?: ('left' | 'center' | 'right') | null;
              verticalAlign?: ('top' | 'middle' | 'bottom') | null;
              blocks?:
                | (
                    | {
                        richText: {
                          [k: string]: unknown;
                        }[];
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'richTextBlock';
                      }
                    | {
                        darkerBackground?: boolean | null;
                        position?: ('default' | 'fullscreen') | null;
                        media: number | Media;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'mediaBlock';
                      }
                    | {
                        label: string;
                        socials: {
                          socialMedia?: {
                            socialLink?: {
                              link_type?: ('reference' | 'custom') | null;
                              newTab?: boolean | null;
                              reference?: {
                                relationTo: 'pages';
                                value: number | Page;
                              } | null;
                              url?: string | null;
                            };
                            socialIcon?: string | null;
                          };
                          id?: string | null;
                        }[];
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'socials';
                      }
                    | {
                        placeholder: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'search';
                      }
                    | {
                        alerts: (number | Alert)[];
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'alertCarousel';
                      }
                    | {
                        darkerBackground?: boolean | null;
                        richText: {
                          [k: string]: unknown;
                        }[];
                        links?:
                          | {
                              link?: {
                                link_type?: ('reference' | 'custom') | null;
                                newTab?: boolean | null;
                                reference?: {
                                  relationTo: 'pages';
                                  value: number | Page;
                                } | null;
                                url?: string | null;
                                label?: string | null;
                              };
                              id?: string | null;
                            }[]
                          | null;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'cta';
                      }
                  )[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'content';
      }
    | {
        type: 'highImpact' | 'lowImpact';
        title?: string | null;
        description?: string | null;
        link?: {
          link_type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label?: string | null;
        };
        media?: number | Media | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'hero';
      }
    | {
        darkerBackground?: boolean | null;
        position?: ('default' | 'fullscreen') | null;
        media: number | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaBlock';
      }
    | {
        richText: {
          [k: string]: unknown;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'richTextBlock';
      }
    | {
        placeholder: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'search';
      }
    | {
        label: string;
        socials: {
          socialMedia?: {
            socialLink?: {
              link_type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?: {
                relationTo: 'pages';
                value: number | Page;
              } | null;
              url?: string | null;
            };
            socialIcon?: string | null;
          };
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'socials';
      }
  )[];
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: number | Media | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "alerts".
 */
export interface Alert {
  id: number;
  title?: string | null;
  type?: {
    relationTo: 'alert-types';
    value: number | AlertType;
  } | null;
  description?: string | null;
  link?: {
    link_type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "alert-types".
 */
export interface AlertType {
  id: number;
  title?: string | null;
  color: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  categories?: (number | Category)[] | null;
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText: {
      [k: string]: unknown;
    }[];
    links?:
      | {
          link?: {
            link_type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label?: string | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: number | Media | null;
  };
  layout: (
    | {
        darkerBackground?: boolean | null;
        richText: {
          [k: string]: unknown;
        }[];
        links?:
          | {
              link?: {
                link_type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'pages';
                  value: number | Page;
                } | null;
                url?: string | null;
                label?: string | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        darkerBackground?: boolean | null;
        columns?:
          | {
              size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
              horizontalAlign?: ('left' | 'center' | 'right') | null;
              verticalAlign?: ('top' | 'middle' | 'bottom') | null;
              blocks?:
                | (
                    | {
                        richText: {
                          [k: string]: unknown;
                        }[];
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'richTextBlock';
                      }
                    | {
                        darkerBackground?: boolean | null;
                        position?: ('default' | 'fullscreen') | null;
                        media: number | Media;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'mediaBlock';
                      }
                    | {
                        label: string;
                        socials: {
                          socialMedia?: {
                            socialLink?: {
                              link_type?: ('reference' | 'custom') | null;
                              newTab?: boolean | null;
                              reference?: {
                                relationTo: 'pages';
                                value: number | Page;
                              } | null;
                              url?: string | null;
                            };
                            socialIcon?: string | null;
                          };
                          id?: string | null;
                        }[];
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'socials';
                      }
                    | {
                        placeholder: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'search';
                      }
                    | {
                        alerts: (number | Alert)[];
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'alertCarousel';
                      }
                    | {
                        darkerBackground?: boolean | null;
                        richText: {
                          [k: string]: unknown;
                        }[];
                        links?:
                          | {
                              link?: {
                                link_type?: ('reference' | 'custom') | null;
                                newTab?: boolean | null;
                                reference?: {
                                  relationTo: 'pages';
                                  value: number | Page;
                                } | null;
                                url?: string | null;
                                label?: string | null;
                              };
                              id?: string | null;
                            }[]
                          | null;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'cta';
                      }
                  )[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'content';
      }
    | {
        darkerBackground?: boolean | null;
        position?: ('default' | 'fullscreen') | null;
        media: number | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaBlock';
      }
    | {
        introContent: {
          [k: string]: unknown;
        }[];
        populateBy?: ('collection' | 'selection') | null;
        relationTo?: ('posts' | 'news') | null;
        categories?: (number | Category)[] | null;
        limit?: number | null;
        selectedDocs?:
          | (
              | {
                  relationTo: 'posts';
                  value: number | Post;
                }
              | {
                  relationTo: 'news';
                  value: number | News;
                }
            )[]
          | null;
        populatedDocs?:
          | (
              | {
                  relationTo: 'posts';
                  value: number | Post;
                }
              | {
                  relationTo: 'news';
                  value: number | News;
                }
            )[]
          | null;
        populatedDocsTotal?: number | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'archive';
      }
  )[];
  enablePremiumContent?: boolean | null;
  premiumContent?:
    | (
        | {
            darkerBackground?: boolean | null;
            richText: {
              [k: string]: unknown;
            }[];
            links?:
              | {
                  link?: {
                    link_type?: ('reference' | 'custom') | null;
                    newTab?: boolean | null;
                    reference?: {
                      relationTo: 'pages';
                      value: number | Page;
                    } | null;
                    url?: string | null;
                    label?: string | null;
                  };
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'cta';
          }
        | {
            darkerBackground?: boolean | null;
            columns?:
              | {
                  size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
                  horizontalAlign?: ('left' | 'center' | 'right') | null;
                  verticalAlign?: ('top' | 'middle' | 'bottom') | null;
                  blocks?:
                    | (
                        | {
                            richText: {
                              [k: string]: unknown;
                            }[];
                            id?: string | null;
                            blockName?: string | null;
                            blockType: 'richTextBlock';
                          }
                        | {
                            darkerBackground?: boolean | null;
                            position?: ('default' | 'fullscreen') | null;
                            media: number | Media;
                            id?: string | null;
                            blockName?: string | null;
                            blockType: 'mediaBlock';
                          }
                        | {
                            label: string;
                            socials: {
                              socialMedia?: {
                                socialLink?: {
                                  link_type?: ('reference' | 'custom') | null;
                                  newTab?: boolean | null;
                                  reference?: {
                                    relationTo: 'pages';
                                    value: number | Page;
                                  } | null;
                                  url?: string | null;
                                };
                                socialIcon?: string | null;
                              };
                              id?: string | null;
                            }[];
                            id?: string | null;
                            blockName?: string | null;
                            blockType: 'socials';
                          }
                        | {
                            placeholder: string;
                            id?: string | null;
                            blockName?: string | null;
                            blockType: 'search';
                          }
                        | {
                            alerts: (number | Alert)[];
                            id?: string | null;
                            blockName?: string | null;
                            blockType: 'alertCarousel';
                          }
                        | {
                            darkerBackground?: boolean | null;
                            richText: {
                              [k: string]: unknown;
                            }[];
                            links?:
                              | {
                                  link?: {
                                    link_type?: ('reference' | 'custom') | null;
                                    newTab?: boolean | null;
                                    reference?: {
                                      relationTo: 'pages';
                                      value: number | Page;
                                    } | null;
                                    url?: string | null;
                                    label?: string | null;
                                  };
                                  id?: string | null;
                                }[]
                              | null;
                            id?: string | null;
                            blockName?: string | null;
                            blockType: 'cta';
                          }
                      )[]
                    | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'content';
          }
        | {
            darkerBackground?: boolean | null;
            position?: ('default' | 'fullscreen') | null;
            media: number | Media;
            id?: string | null;
            blockName?: string | null;
            blockType: 'mediaBlock';
          }
        | {
            introContent: {
              [k: string]: unknown;
            }[];
            populateBy?: ('collection' | 'selection') | null;
            relationTo?: ('posts' | 'news') | null;
            categories?: (number | Category)[] | null;
            limit?: number | null;
            selectedDocs?:
              | (
                  | {
                      relationTo: 'posts';
                      value: number | Post;
                    }
                  | {
                      relationTo: 'news';
                      value: number | News;
                    }
                )[]
              | null;
            populatedDocs?:
              | (
                  | {
                      relationTo: 'posts';
                      value: number | Post;
                    }
                  | {
                      relationTo: 'news';
                      value: number | News;
                    }
                )[]
              | null;
            populatedDocsTotal?: number | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'archive';
          }
      )[]
    | null;
  relatedPosts?: (number | Post)[] | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  roles?: ('admin' | 'editor')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  caption?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news".
 */
export interface News {
  id: number;
  title: string;
  categories?: (number | Category)[] | null;
  publishedAt?: string | null;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText: {
      [k: string]: unknown;
    }[];
    links?:
      | {
          link?: {
            link_type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label?: string | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: number | Media | null;
  };
  layout: (
    | {
        darkerBackground?: boolean | null;
        richText: {
          [k: string]: unknown;
        }[];
        links?:
          | {
              link?: {
                link_type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'pages';
                  value: number | Page;
                } | null;
                url?: string | null;
                label?: string | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        darkerBackground?: boolean | null;
        columns?:
          | {
              size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
              horizontalAlign?: ('left' | 'center' | 'right') | null;
              verticalAlign?: ('top' | 'middle' | 'bottom') | null;
              blocks?:
                | (
                    | {
                        richText: {
                          [k: string]: unknown;
                        }[];
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'richTextBlock';
                      }
                    | {
                        darkerBackground?: boolean | null;
                        position?: ('default' | 'fullscreen') | null;
                        media: number | Media;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'mediaBlock';
                      }
                    | {
                        label: string;
                        socials: {
                          socialMedia?: {
                            socialLink?: {
                              link_type?: ('reference' | 'custom') | null;
                              newTab?: boolean | null;
                              reference?: {
                                relationTo: 'pages';
                                value: number | Page;
                              } | null;
                              url?: string | null;
                            };
                            socialIcon?: string | null;
                          };
                          id?: string | null;
                        }[];
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'socials';
                      }
                    | {
                        placeholder: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'search';
                      }
                    | {
                        alerts: (number | Alert)[];
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'alertCarousel';
                      }
                    | {
                        darkerBackground?: boolean | null;
                        richText: {
                          [k: string]: unknown;
                        }[];
                        links?:
                          | {
                              link?: {
                                link_type?: ('reference' | 'custom') | null;
                                newTab?: boolean | null;
                                reference?: {
                                  relationTo: 'pages';
                                  value: number | Page;
                                } | null;
                                url?: string | null;
                                label?: string | null;
                              };
                              id?: string | null;
                            }[]
                          | null;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'cta';
                      }
                  )[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'content';
      }
    | {
        darkerBackground?: boolean | null;
        position?: ('default' | 'fullscreen') | null;
        media: number | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaBlock';
      }
    | {
        introContent: {
          [k: string]: unknown;
        }[];
        populateBy?: ('collection' | 'selection') | null;
        relationTo?: ('posts' | 'news') | null;
        categories?: (number | Category)[] | null;
        limit?: number | null;
        selectedDocs?:
          | (
              | {
                  relationTo: 'posts';
                  value: number | Post;
                }
              | {
                  relationTo: 'news';
                  value: number | News;
                }
            )[]
          | null;
        populatedDocs?:
          | (
              | {
                  relationTo: 'posts';
                  value: number | Post;
                }
              | {
                  relationTo: 'news';
                  value: number | News;
                }
            )[]
          | null;
        populatedDocsTotal?: number | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'archive';
      }
  )[];
  relatedNews?: (number | News)[] | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menus".
 */
export interface Menu {
  id: number;
  title: string;
  isLink?: boolean | null;
  menuLink?: {
    link_type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
  };
  description?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  links?:
    | {
        linkGroup?: {
          link?: {
            link_type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label?: string | null;
          };
          lucideIcons?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                type: string;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        message?: {
          root: {
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            type: string;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  logo?: {
    logoLight?: number | Media | null;
    logoDark?: number | Media | null;
    isLink?: boolean | null;
    logoLink?: {
      link_type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label?: string | null;
    };
  };
  menus?:
    | {
        menu?: {
          relationTo: 'menus';
          value: number | Menu;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  test?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  test_html?: string | null;
  block1?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  block2?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  emailGroup: {
    email: string;
    isLink?: boolean | null;
  };
  legal: {
    link_type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label?: string | null;
  };
  logos?:
    | {
        logo: number | Media;
        id?: string | null;
      }[]
    | null;
  newsletter: {
    title: string;
    description?: string | null;
    authorizationLabel: string;
    inputPlaceholder: string;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}