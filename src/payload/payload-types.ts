/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    pages: Page;
    media: Media;
    categories: Category;
    users: User;
    menus: Menu;
    news: News;
    'alert-types': AlertType;
    alerts: Alert;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  publishedAt?: string | null;
  layout: (
    | {
        alerts: (number | Alert)[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'alertCarousel';
      }
    | {
        introContent: {
          [k: string]: unknown;
        }[];
        populateBy?: ('collection' | 'selection') | null;
        relationTo?: 'news' | null;
        categories?: (number | Category)[] | null;
        limit?: number | null;
        selectedDocs?:
          | {
              relationTo: 'news';
              value: number | News;
            }[]
          | null;
        populatedDocs?:
          | {
              relationTo: 'news';
              value: number | News;
            }[]
          | null;
        populatedDocsTotal?: number | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'archive';
      }
    | {
        darkerBackground?: boolean | null;
        richText: {
          [k: string]: unknown;
        }[];
        links?:
          | {
              link?: {
                link_type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'pages';
                  value: number | Page;
                } | null;
                url?: string | null;
                label?: string | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'cta';
      }
    | {
        columns?:
          | {
              size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
              horizontalAlign?: ('left' | 'center' | 'right') | null;
              verticalAlign?: ('top' | 'middle' | 'bottom') | null;
              blocks?:
                | (
                    | {
                        richText: {
                          [k: string]: unknown;
                        }[];
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'richTextBlock';
                      }
                    | {
                        darkerBackground?: boolean | null;
                        position?: ('default' | 'wide') | null;
                        media: number | Media;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'mediaBlock';
                      }
                    | {
                        label: string;
                        socials: {
                          socialMedia?: {
                            socialLink?: {
                              link_type?: ('reference' | 'custom') | null;
                              newTab?: boolean | null;
                              reference?: {
                                relationTo: 'pages';
                                value: number | Page;
                              } | null;
                              url?: string | null;
                            };
                            socialIcon?: string | null;
                          };
                          id?: string | null;
                        }[];
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'socials';
                      }
                    | {
                        placeholder: string;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'search';
                      }
                    | {
                        alerts: (number | Alert)[];
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'alertCarousel';
                      }
                    | {
                        darkerBackground?: boolean | null;
                        richText: {
                          [k: string]: unknown;
                        }[];
                        links?:
                          | {
                              link?: {
                                link_type?: ('reference' | 'custom') | null;
                                newTab?: boolean | null;
                                reference?: {
                                  relationTo: 'pages';
                                  value: number | Page;
                                } | null;
                                url?: string | null;
                                label?: string | null;
                              };
                              id?: string | null;
                            }[]
                          | null;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'cta';
                      }
                    | {
                        iconPosition?: ('left' | 'right') | null;
                        links?:
                          | {
                              link?: {
                                link_type?: ('reference' | 'custom') | null;
                                newTab?: boolean | null;
                                reference?: {
                                  relationTo: 'pages';
                                  value: number | Page;
                                } | null;
                                url?: string | null;
                                label?: string | null;
                              };
                              id?: string | null;
                            }[]
                          | null;
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'linkGrid';
                      }
                    | {
                        cardGridFields?: {
                          populateFrom?: ('none' | 'news') | null;
                          useWithContainer?: boolean | null;
                          showIcon?: boolean | null;
                          cards?:
                            | {
                                title: string;
                                description?: string | null;
                                enableLink?: boolean | null;
                                link?: {
                                  link_type?: ('reference' | 'custom') | null;
                                  newTab?: boolean | null;
                                  reference?: {
                                    relationTo: 'pages';
                                    value: number | Page;
                                  } | null;
                                  url?: string | null;
                                };
                                id?: string | null;
                              }[]
                            | null;
                          newsCards?:
                            | {
                                card?: (number | null) | News;
                                id?: string | null;
                              }[]
                            | null;
                        };
                        id?: string | null;
                        blockName?: string | null;
                        blockType: 'cardGrid';
                      }
                  )[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'content';
      }
    | {
        type: 'highImpact' | 'lowImpact';
        title?: string | null;
        description?: string | null;
        link?: {
          link_type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label?: string | null;
        };
        media?: number | Media | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'hero';
      }
    | {
        darkerBackground?: boolean | null;
        position?: ('default' | 'wide') | null;
        media: number | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaBlock';
      }
    | {
        richText: {
          [k: string]: unknown;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'richTextBlock';
      }
    | {
        placeholder: string;
        id?: string | null;
        blockName?: string | null;
        blockType: 'search';
      }
    | {
        label: string;
        socials: {
          socialMedia?: {
            socialLink?: {
              link_type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?: {
                relationTo: 'pages';
                value: number | Page;
              } | null;
              url?: string | null;
            };
            socialIcon?: string | null;
          };
          id?: string | null;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'socials';
      }
    | {
        iconPosition?: ('left' | 'right') | null;
        links?:
          | {
              link?: {
                link_type?: ('reference' | 'custom') | null;
                newTab?: boolean | null;
                reference?: {
                  relationTo: 'pages';
                  value: number | Page;
                } | null;
                url?: string | null;
                label?: string | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'linkGrid';
      }
    | {
        cardGridFields?: {
          populateFrom?: ('none' | 'news') | null;
          useWithContainer?: boolean | null;
          showIcon?: boolean | null;
          cards?:
            | {
                title: string;
                description?: string | null;
                enableLink?: boolean | null;
                link?: {
                  link_type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?: {
                    relationTo: 'pages';
                    value: number | Page;
                  } | null;
                  url?: string | null;
                };
                id?: string | null;
              }[]
            | null;
          newsCards?:
            | {
                card?: (number | null) | News;
                id?: string | null;
              }[]
            | null;
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'cardGrid';
      }
    | {
        hasTitle?: boolean | null;
        title?: string | null;
        darkerBackground?: boolean | null;
        spacing?: ('none' | 'small' | 'normal' | 'large') | null;
        blocks: (
          | {
              columns?:
                | {
                    size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
                    horizontalAlign?: ('left' | 'center' | 'right') | null;
                    verticalAlign?: ('top' | 'middle' | 'bottom') | null;
                    blocks?:
                      | (
                          | {
                              richText: {
                                [k: string]: unknown;
                              }[];
                              id?: string | null;
                              blockName?: string | null;
                              blockType: 'richTextBlock';
                            }
                          | {
                              darkerBackground?: boolean | null;
                              position?: ('default' | 'wide') | null;
                              media: number | Media;
                              id?: string | null;
                              blockName?: string | null;
                              blockType: 'mediaBlock';
                            }
                          | {
                              label: string;
                              socials: {
                                socialMedia?: {
                                  socialLink?: {
                                    link_type?: ('reference' | 'custom') | null;
                                    newTab?: boolean | null;
                                    reference?: {
                                      relationTo: 'pages';
                                      value: number | Page;
                                    } | null;
                                    url?: string | null;
                                  };
                                  socialIcon?: string | null;
                                };
                                id?: string | null;
                              }[];
                              id?: string | null;
                              blockName?: string | null;
                              blockType: 'socials';
                            }
                          | {
                              placeholder: string;
                              id?: string | null;
                              blockName?: string | null;
                              blockType: 'search';
                            }
                          | {
                              alerts: (number | Alert)[];
                              id?: string | null;
                              blockName?: string | null;
                              blockType: 'alertCarousel';
                            }
                          | {
                              darkerBackground?: boolean | null;
                              richText: {
                                [k: string]: unknown;
                              }[];
                              links?:
                                | {
                                    link?: {
                                      link_type?: ('reference' | 'custom') | null;
                                      newTab?: boolean | null;
                                      reference?: {
                                        relationTo: 'pages';
                                        value: number | Page;
                                      } | null;
                                      url?: string | null;
                                      label?: string | null;
                                    };
                                    id?: string | null;
                                  }[]
                                | null;
                              id?: string | null;
                              blockName?: string | null;
                              blockType: 'cta';
                            }
                          | {
                              iconPosition?: ('left' | 'right') | null;
                              links?:
                                | {
                                    link?: {
                                      link_type?: ('reference' | 'custom') | null;
                                      newTab?: boolean | null;
                                      reference?: {
                                        relationTo: 'pages';
                                        value: number | Page;
                                      } | null;
                                      url?: string | null;
                                      label?: string | null;
                                    };
                                    id?: string | null;
                                  }[]
                                | null;
                              id?: string | null;
                              blockName?: string | null;
                              blockType: 'linkGrid';
                            }
                          | {
                              cardGridFields?: {
                                populateFrom?: ('none' | 'news') | null;
                                useWithContainer?: boolean | null;
                                showIcon?: boolean | null;
                                cards?:
                                  | {
                                      title: string;
                                      description?: string | null;
                                      enableLink?: boolean | null;
                                      link?: {
                                        link_type?: ('reference' | 'custom') | null;
                                        newTab?: boolean | null;
                                        reference?: {
                                          relationTo: 'pages';
                                          value: number | Page;
                                        } | null;
                                        url?: string | null;
                                      };
                                      id?: string | null;
                                    }[]
                                  | null;
                                newsCards?:
                                  | {
                                      card?: (number | null) | News;
                                      id?: string | null;
                                    }[]
                                  | null;
                              };
                              id?: string | null;
                              blockName?: string | null;
                              blockType: 'cardGrid';
                            }
                        )[]
                      | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'content';
            }
          | {
              richText: {
                [k: string]: unknown;
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'richTextBlock';
            }
          | {
              darkerBackground?: boolean | null;
              position?: ('default' | 'wide') | null;
              media: number | Media;
              id?: string | null;
              blockName?: string | null;
              blockType: 'mediaBlock';
            }
          | {
              label: string;
              socials: {
                socialMedia?: {
                  socialLink?: {
                    link_type?: ('reference' | 'custom') | null;
                    newTab?: boolean | null;
                    reference?: {
                      relationTo: 'pages';
                      value: number | Page;
                    } | null;
                    url?: string | null;
                  };
                  socialIcon?: string | null;
                };
                id?: string | null;
              }[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'socials';
            }
          | {
              placeholder: string;
              id?: string | null;
              blockName?: string | null;
              blockType: 'search';
            }
          | {
              alerts: (number | Alert)[];
              id?: string | null;
              blockName?: string | null;
              blockType: 'alertCarousel';
            }
          | {
              darkerBackground?: boolean | null;
              richText: {
                [k: string]: unknown;
              }[];
              links?:
                | {
                    link?: {
                      link_type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?: {
                        relationTo: 'pages';
                        value: number | Page;
                      } | null;
                      url?: string | null;
                      label?: string | null;
                    };
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'cta';
            }
          | {
              iconPosition?: ('left' | 'right') | null;
              links?:
                | {
                    link?: {
                      link_type?: ('reference' | 'custom') | null;
                      newTab?: boolean | null;
                      reference?: {
                        relationTo: 'pages';
                        value: number | Page;
                      } | null;
                      url?: string | null;
                      label?: string | null;
                    };
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'linkGrid';
            }
          | {
              cardGridFields?: {
                populateFrom?: ('none' | 'news') | null;
                useWithContainer?: boolean | null;
                showIcon?: boolean | null;
                cards?:
                  | {
                      title: string;
                      description?: string | null;
                      enableLink?: boolean | null;
                      link?: {
                        link_type?: ('reference' | 'custom') | null;
                        newTab?: boolean | null;
                        reference?: {
                          relationTo: 'pages';
                          value: number | Page;
                        } | null;
                        url?: string | null;
                      };
                      id?: string | null;
                    }[]
                  | null;
                newsCards?:
                  | {
                      card?: (number | null) | News;
                      id?: string | null;
                    }[]
                  | null;
              };
              id?: string | null;
              blockName?: string | null;
              blockType: 'cardGrid';
            }
        )[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'section';
      }
  )[];
  slug?: string | null;
  menu?: (number | null) | Menu;
  parent?: (number | null) | Page;
  breadcrumbs?:
    | {
        doc?: (number | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: number | Media | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "alerts".
 */
export interface Alert {
  id: number;
  title?: string | null;
  type?: {
    relationTo: 'alert-types';
    value: number | AlertType;
  } | null;
  description?: string | null;
  link?: {
    link_type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "alert-types".
 */
export interface AlertType {
  id: number;
  title?: string | null;
  color: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "news".
 */
export interface News {
  id: number;
  title: string;
  image: number | Media;
  excerpt: {
    [k: string]: unknown;
  }[];
  content: (
    | {
        richText: {
          [k: string]: unknown;
        }[];
        id?: string | null;
        blockName?: string | null;
        blockType: 'newsContent';
      }
    | {
        darkerBackground?: boolean | null;
        position?: ('default' | 'wide') | null;
        media: number | Media;
        id?: string | null;
        blockName?: string | null;
        blockType: 'mediaBlock';
      }
  )[];
  relatedNews?: (number | News)[] | null;
  slug?: string | null;
  publishedOn?: string | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: number | Media | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  caption?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "menus".
 */
export interface Menu {
  id: number;
  title: string;
  isLink?: boolean | null;
  menuLink?: {
    link_type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
  };
  description?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  links?:
    | {
        linkGroup?: {
          link?: {
            link_type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label?: string | null;
          };
          lucideIcons?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  roles?: ('admin' | 'editor')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  redirect?: {
    url: string;
  };
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        message?:
          | {
              [k: string]: unknown;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form: number | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  logo?: {
    logoLight?: number | Media | null;
    logoDark?: number | Media | null;
    isLink?: boolean | null;
    logoLink?: {
      link_type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
    };
  };
  menus?:
    | {
        menu?: {
          relationTo: 'menus';
          value: number | Menu;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  test?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  test_html?: string | null;
  block1?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  block2?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  emailGroup: {
    email: string;
    isLink?: boolean | null;
  };
  legal?: {
    link_type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label?: string | null;
  };
  logos?:
    | {
        logo: number | Media;
        id?: string | null;
      }[]
    | null;
  newsletter: {
    title: string;
    description?: string | null;
    authorizationLabel: string;
    inputPlaceholder: string;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}